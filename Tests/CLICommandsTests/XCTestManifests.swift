#if !canImport(ObjectiveC)
import XCTest

extension DeleteKeysCommandTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DeleteKeysCommandTests = [
        ("testGoWithArguments", testGoWithArguments),
    ]
}

extension RenameKeyCommandTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RenameKeyCommandTests = [
        ("testGoWithArguments", testGoWithArguments),
    ]
}

extension SetValueCommandTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SetValueCommandTests = [
        ("testDeleteValue", testDeleteValue),
        ("testSetPlainValue", testSetPlainValue),
        ("testSetValueWithLineBreak", testSetValueWithLineBreak),
    ]
}

extension SortKeysCommandTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SortKeysCommandTests = [
        ("testCaseInsensitiveSorting", testCaseInsensitiveSorting),
        ("testCaseSensitiveSorting", testCaseSensitiveSorting),
    ]
}

extension ZipKeysCommandTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ZipKeysCommandTests = [
        ("testGoWithArguments", testGoWithArguments),
    ]
}

extension ZipToCsvCommandTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ZipToCsvCommandTests = [
        ("testGoWithArguments", testGoWithArguments),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(DeleteKeysCommandTests.__allTests__DeleteKeysCommandTests),
        testCase(RenameKeyCommandTests.__allTests__RenameKeyCommandTests),
        testCase(SetValueCommandTests.__allTests__SetValueCommandTests),
        testCase(SortKeysCommandTests.__allTests__SortKeysCommandTests),
        testCase(ZipKeysCommandTests.__allTests__ZipKeysCommandTests),
        testCase(ZipToCsvCommandTests.__allTests__ZipToCsvCommandTests),
    ]
}
#endif
