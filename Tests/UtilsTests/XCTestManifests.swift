#if !canImport(ObjectiveC)
import XCTest

extension ArrayTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ArrayTests = [
        ("test_001", test_001),
        ("test_002", test_002),
    ]
}

extension EscapingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EscapingTests = [
        ("test_001", test_001),
        ("test_002", test_002),
        ("test_003", test_003),
        ("test_004", test_004),
        ("test_005", test_005),
        ("test_006", test_006),
        ("test_007", test_007),
    ]
}

extension FileExtensionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileExtensionTests = [
        ("test_001", test_001),
        ("test_002", test_002),
    ]
}

extension PathsFromStringTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PathsFromStringTests = [
        ("test_001", test_001),
        ("test_002", test_002),
    ]
}

extension SplitIntoLinesTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SplitIntoLinesTests = [
        ("test_001", test_001),
        ("test_002", test_002),
        ("test_003", test_003),
        ("test_004", test_004),
        ("test_005", test_005),
    ]
}

extension UntranslatedTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UntranslatedTests = [
        ("test_001", test_001),
        ("test_002", test_002),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ArrayTests.__allTests__ArrayTests),
        testCase(EscapingTests.__allTests__EscapingTests),
        testCase(FileExtensionTests.__allTests__FileExtensionTests),
        testCase(PathsFromStringTests.__allTests__PathsFromStringTests),
        testCase(SplitIntoLinesTests.__allTests__SplitIntoLinesTests),
        testCase(UntranslatedTests.__allTests__UntranslatedTests),
    ]
}
#endif
